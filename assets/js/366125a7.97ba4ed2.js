"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5104:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={slug:"/guides/rsocket-js/client",title:"RSocketClient - rsocket-js",sidebar_label:"Introduction"},l=void 0,c={unversionedId:"guides/rsocket-js/client/introduction",id:"guides/rsocket-js/client/introduction",title:"RSocketClient - rsocket-js",description:"An rsocket-js client can be used to communicate with any RSocket Server implemented against the same protocol version as the client, and which implements the same transport as the client.",source:"@site/content-docs/guides/rsocket-js/client/introduction.mdx",sourceDirName:"guides/rsocket-js/client",slug:"/guides/rsocket-js/client",permalink:"/guides/rsocket-js/client",draft:!1,editUrl:"https://github.com/rsocket/rsocket-website/edit/master/content-docs/guides/rsocket-js/client/introduction.mdx",tags:[],version:"current",lastUpdatedBy:"Kevin Viglucci",lastUpdatedAt:1683341134,formattedLastUpdatedAt:"May 6, 2023",frontMatter:{slug:"/guides/rsocket-js/client",title:"RSocketClient - rsocket-js",sidebar_label:"Introduction"},sidebar:"guides",previous:{title:"Introduction",permalink:"/guides/rsocket-js"},next:{title:"TCP Client",permalink:"/guides/rsocket-js/client/rsocket-tcp-client"}},p={},d=[{value:"WebSocket Client Quick Start Example",id:"websocket-client-quick-start-example",level:3},{value:"Client API",id:"client-api",level:2},{value:"RSocketClient (class)",id:"rsocketclient-class",level:2},{value:"constructor (function)",id:"constructor-function",level:3},{value:"serializers (property)",id:"serializers-property",level:4},{value:"transport (property)",id:"transport-property",level:4},{value:"connect() (method)",id:"connect-method",level:3},{value:"RSocket (interface)",id:"rsocket-interface",level:2},{value:"fireAndForget() (method)",id:"fireandforget-method",level:3},{value:"requestResponse() (method)",id:"requestresponse-method",level:3},{value:"requestStream() (method)",id:"requeststream-method",level:3},{value:"requestChannel() (method)",id:"requestchannel-method",level:3},{value:"metadataPush() (method)",id:"metadatapush-method",level:3}],m={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An ",(0,o.kt)("inlineCode",{parentName:"p"},"rsocket-js")," client can be used to communicate with any RSocket Server implemented against the same protocol version as the client, and which implements the same transport as the client."),(0,o.kt)("p",null,"Available transports for ",(0,o.kt)("inlineCode",{parentName:"p"},"rsocket-js")," include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/guides/rsocket-js/client/rsocket-tcp-client"},(0,o.kt)("inlineCode",{parentName:"a"},"rsocket-tcp-client"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/guides/rsocket-js/client/rsocket-websocket-client"},(0,o.kt)("inlineCode",{parentName:"a"},"rsocket-websocket-client")))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"RSocketClient")," class is exported from the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/rsocket-core"},(0,o.kt)("inlineCode",{parentName:"a"},"rsocket-core"))," NPM package, and should be passed an instance of one of the available transports."),(0,o.kt)("p",null,"To get started creating an RSocket client, you will first need to install the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/rsocket-core"},(0,o.kt)("inlineCode",{parentName:"a"},"rsocket-core"))," NPM package, and atleast one transport protocol implementation. See the WebSocket client example below."),(0,o.kt)("h3",{id:"websocket-client-quick-start-example"},"WebSocket Client Quick Start Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install rsocket-core rsocket-websocket-client\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { RSocketClient } from 'rsocket-core';\nimport RSocketWebsocketClient from 'rsocket-websocket-client';\n\nasync function createClient(options) {\n  const client = new RSocketClient({\n    setup: {\n      dataMimeType: 'text/plain',\n      keepAlive: 1000000, // avoid sending during test\n      lifetime: 100000,\n      metadataMimeType: 'text/plain',\n    },\n    transport: new RSocketWebsocketClient({\n      host: options.host,\n      port: options.port,\n    }),\n  });\n\n  return client.connect();\n}\n\nasync function run() {\n  const rsocket = await createClient({\n    host: '127.0.0.1',\n    port: 9898,\n  });\n\n  ...\n}\n\nawait run();\n")),(0,o.kt)("h2",{id:"client-api"},"Client API"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"rsocket-core")," package exposes the the following types:"),(0,o.kt)("h2",{id:"rsocketclient-class"},"RSocketClient (class)"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RSocketClient")," is used to create an instance of a client. The clients connection does not initialize until the ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," method is invoked."),(0,o.kt)("h3",{id:"constructor-function"},"constructor (function)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-flow"},"class RSocketClient {\n  constructor(options: Options)\n}\n\ntype Options = {\n  serializers?: {\n    data: Serializer\n    metadata: Serializer,\n  },\n  setup: {\n    keepAlive: number,\n    lifetime: number,\n    dataMimeType: string,\n    metadataMimeType: string,\n  },\n  transport: TransportClient,\n};\n\ntype Serializer<T> = {\n  deserialize: (data: ?Encodable) => ?T,\n  serialize: (data: ?T) => ?Encodable,\n}\n\ntype Encodable = string | Buffer | UInt8Array;\n\ntype TransportClient = {\n  connect: Single<DuplexConnection>,\n}\n")),(0,o.kt)("h4",{id:"serializers-property"},"serializers (property)"),(0,o.kt)("p",null,"By default the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata")," of each payload are passed through to the\ntransport layer as-is. This is appropriate for sending/receiving strings/binary.\nTo send/receive JSON instead, pass ",(0,o.kt)("inlineCode",{parentName:"p"},"serializers: JsonSerializers")," (imported from\nrsocket-core)."),(0,o.kt)("h4",{id:"transport-property"},"transport (property)"),(0,o.kt)("p",null,"This will typically be an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"rsocket-tcp-client")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"rsocket-websocket-client"),", though any value conforming to the ",(0,o.kt)("inlineCode",{parentName:"p"},"TransportClient"),"\nprotocol is allowed."),(0,o.kt)("h3",{id:"connect-method"},"connect() (method)"),(0,o.kt)("p",null,"This method opens the connection to the peer. Internally this calls ",(0,o.kt)("inlineCode",{parentName:"p"},"connect()")," on the\ntransport client. See below for the ",(0,o.kt)("inlineCode",{parentName:"p"},"RSocket")," interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"class RSocketClient {\n  \u22ee\n  connect(): Single<RSocket>\n}\n")),(0,o.kt)("h2",{id:"rsocket-interface"},"RSocket (interface)"),(0,o.kt)("p",null,"This interface represents an instance of a rsocket peer-to-peer connection, providing the five\ncore interactions (fire/forget, request/reponse, etc.):"),(0,o.kt)("h3",{id:"fireandforget-method"},"fireAndForget() (method)"),(0,o.kt)("p",null,"This method sends data/metadata to the server without waiting for a response. The data is\nsent immediately."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"fireAndForget(payload: Payload): void\n")),(0,o.kt)("h3",{id:"requestresponse-method"},"requestResponse() (method)"),(0,o.kt)("p",null,"This method sends data/metadata to the server, which returns a single response. The data is\nsent lazily when the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"Single")," is subscribed to."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"requestResponse(payload: Payload): Single<Payload>\n")),(0,o.kt)("h3",{id:"requeststream-method"},"requestStream() (method)"),(0,o.kt)("p",null,"This method sends data/metadata to the server, which returns a stream of responses. The semantics\nof the stream are application-specific. For example, the stream may represent\nupdates to a single conceptual value over time, items in an incrementally loaded\nlist, events, etc. The data is sent to the peer lazily when the returned\n",(0,o.kt)("inlineCode",{parentName:"p"},"Flowable")," is subscribed to and ",(0,o.kt)("inlineCode",{parentName:"p"},"request(n)")," is called to signal demand."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"requestStream(payload: Payload): Flowable<Payload>\n")),(0,o.kt)("h3",{id:"requestchannel-method"},"requestChannel() (method)"),(0,o.kt)("p",null,"This method establishes an understanding between a client and a server where each intends to send and receive streams of data from the other. Each actor in this relationship is responsible for signaling to the other that they are ready to receive data by invoking ",(0,o.kt)("inlineCode",{parentName:"p"},"request(n)"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," is the max number of payloads the actor is comfortable handling. Conceptually, ",(0,o.kt)("inlineCode",{parentName:"p"},"requestChannel")," can be thought of as two entities 'polling' from each other by signaling to the others that they are ready to accept ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," number of messages. Inversely, ",(0,o.kt)("inlineCode",{parentName:"p"},"requestChannel")," can be leveraged to facilitate a consistent stream of data transfer payloads between client and server by each (or either) invoking ",(0,o.kt)("inlineCode",{parentName:"p"},"request(0x7fffffff)"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"0x7fffffff")," is the max integer value for ",(0,o.kt)("inlineCode",{parentName:"p"},"int32"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"requestChannel(payload: Flowable<Payload>): Flowable<Payload>\n")),(0,o.kt)("h3",{id:"metadatapush-method"},"metadataPush() (method)"),(0,o.kt)("p",null,"This method sends metadata only to the server without waiting for a response. The payload is\nsent immediately. This method is not for the direct application usage and should be used to exchange some service level information"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"metadataPush(payload: Payload): Single<Payload>\n")))}u.isMDXComponent=!0}}]);