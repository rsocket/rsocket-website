"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[652],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>y});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),i=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=i(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=i(t),v=o,y=u["".concat(p,".").concat(v)]||u[v]||d[v]||s;return t?n.createElement(y,a(a({ref:r},l),{},{components:t})):n.createElement(y,a({ref:r},l))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=v;var c={};for(var p in r)hasOwnProperty.call(r,p)&&(c[p]=r[p]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var i=2;i<s;i++)a[i]=t[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},3528:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>p,default:()=>v,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var n=t(7462),o=t(3366),s=(t(7294),t(3905)),a=["components"],c={slug:"/guides/rsocket-py/server/rsocket-tcp-server",title:"Server - TCP Transport",sidebar_label:"TCP Transport"},p=void 0,i={unversionedId:"guides/rsocket-py/server/rsocket-tcp-server",id:"guides/rsocket-py/server/rsocket-tcp-server",title:"Server - TCP Transport",description:"rsocket-py supports multiple transport protocols. The TCP transport is available by default.",source:"@site/content-docs/guides/rsocket-py/server/rsocket-tcp-server.mdx",sourceDirName:"guides/rsocket-py/server",slug:"/guides/rsocket-py/server/rsocket-tcp-server",permalink:"/guides/rsocket-py/server/rsocket-tcp-server",draft:!1,editUrl:"https://github.com/rsocket/rsocket-website/edit/master/content-docs/guides/rsocket-py/server/rsocket-tcp-server.mdx",tags:[],version:"current",lastUpdatedBy:"Kevin Viglucci",lastUpdatedAt:1676260781,formattedLastUpdatedAt:"Feb 13, 2023",frontMatter:{slug:"/guides/rsocket-py/server/rsocket-tcp-server",title:"Server - TCP Transport",sidebar_label:"TCP Transport"},sidebar:"guides",previous:{title:"Introduction",permalink:"/guides/rsocket-py/server"},next:{title:"WebSocket Transport",permalink:"/guides/rsocket-py/server/rsocket-websocket-server"}},l={},u=[{value:"Example",id:"example",level:2}],d={toc:u};function v(e){var r=e.components,t=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"rsocket-py")," supports multiple transport protocols. The TCP transport is available by default.\nIn order to use a basic TCP transport, instantiate a ",(0,s.kt)("inlineCode",{parentName:"p"},"TransportTCP")," and pass it to an ",(0,s.kt)("inlineCode",{parentName:"p"},"RSocketServer")," instance."),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"import asyncio\nimport logging\nimport sys\n\nfrom rsocket.payload import Payload\nfrom rsocket.request_handler import BaseRequestHandler\nfrom rsocket.rsocket_server import RSocketServer\nfrom rsocket.transports.tcp import TransportTCP\n\n\nclass Handler(BaseRequestHandler):\n    async def request_response(self, payload: Payload) -> asyncio.Future:\n        ...\n\n\nasync def run_server(server_port):\n    logging.info('Starting server at localhost:%s', server_port)\n\n    def session(*connection):\n        RSocketServer(TransportTCP(*connection), handler_factory=Handler)\n\n    server = await asyncio.start_server(session, 'localhost', server_port)\n\n    async with server:\n        await server.serve_forever()\n\n\nif __name__ == '__main__':\n    port = sys.argv[1] if len(sys.argv) > 1 else 6565\n    logging.basicConfig(level=logging.DEBUG)\n    asyncio.run(run_server(port))\n")))}v.isMDXComponent=!0}}]);