"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[599],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(r),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||c;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=m;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[u]="string"==typeof e?e:o,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},238:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=r(3366),c=(r(7294),r(3905)),i=["components"],a={slug:"/guides/rsocket-py/client/rsocket-tcp-client",title:"Client - TCP Transport",sidebar_label:"TCP Transport"},s=void 0,l={unversionedId:"guides/rsocket-py/client/rsocket-tcp-client",id:"guides/rsocket-py/client/rsocket-tcp-client",title:"Client - TCP Transport",description:"The TransportTCP implements the RSocket protocol using the TCP network transport protocol,",source:"@site/content-docs/guides/rsocket-py/client/rsocket-tcp-client.mdx",sourceDirName:"guides/rsocket-py/client",slug:"/guides/rsocket-py/client/rsocket-tcp-client",permalink:"/guides/rsocket-py/client/rsocket-tcp-client",draft:!1,editUrl:"https://github.com/rsocket/rsocket-website/edit/master/content-docs/guides/rsocket-py/client/rsocket-tcp-client.mdx",tags:[],version:"current",lastUpdatedBy:"Kevin Viglucci",lastUpdatedAt:1670387561,formattedLastUpdatedAt:"Dec 7, 2022",frontMatter:{slug:"/guides/rsocket-py/client/rsocket-tcp-client",title:"Client - TCP Transport",sidebar_label:"TCP Transport"},sidebar:"guides",previous:{title:"Introduction",permalink:"/guides/rsocket-py/client"},next:{title:"WebSocket Transport",permalink:"/guides/rsocket-py/client/rsocket-websocket-client"}},p={},u=[{value:"TCP Client Quick Start Example",id:"tcp-client-quick-start-example",level:2}],d={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"TransportTCP")," implements the RSocket protocol using the TCP network transport protocol,\nand is suitable for Server to Server, and other scenarios where raw TCP is available."),(0,c.kt)("h2",{id:"tcp-client-quick-start-example"},"TCP Client Quick Start Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-py"},"import asyncio\nfrom rsocket.rsocket_client import RSocketClient\nfrom rsocket.transports.tcp import TransportTCP\nfrom rsocket.helpers import single_transport_provider\n\nasync def main():\n    connection = await asyncio.open_connection('localhost', 6565)\n\n    async with RSocketClient(single_transport_provider(TransportTCP(*connection))) as client:\n        ... # Execute requests\n\nif __name__ == '__main__':\n    asyncio.run(main())\n")))}m.isMDXComponent=!0}}]);