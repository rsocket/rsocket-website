"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[485],{3905:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>c});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var u=n.createContext({}),p=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},m=function(t){var e=p(t.components);return n.createElement(u.Provider,{value:e},t.children)},k="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,u=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),k=p(r),d=a,c=k["".concat(u,".").concat(d)]||k[d]||s[d]||l;return r?n.createElement(c,o(o({ref:e},m),{},{components:r})):n.createElement(c,o({ref:e},m))}));function c(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i[k]="string"==typeof t?t:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9738:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>m,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>k});var n=r(7462),a=r(3366),l=(r(7294),r(3905)),o=["components"],i={slug:"/about/implementations",title:"Implementations",sidebar_label:"Implementations"},u=void 0,p={unversionedId:"about/implementations",id:"about/implementations",title:"Implementations",description:"Mandatory Core Protocol Features",source:"@site/content-docs/about/implementations.md",sourceDirName:"about",slug:"/about/implementations",permalink:"/about/implementations",draft:!1,editUrl:"https://github.com/rsocket/rsocket-website/edit/master/content-docs/about/implementations.md",tags:[],version:"current",lastUpdatedBy:"jell-o-fishi",lastUpdatedAt:1675785047,formattedLastUpdatedAt:"Feb 7, 2023",frontMatter:{slug:"/about/implementations",title:"Implementations",sidebar_label:"Implementations"},sidebar:"about",previous:{title:"Protocol",permalink:"/about/protocol"}},m={},k=[{value:"Mandatory Core Protocol Features",id:"mandatory-core-protocol-features",level:2},{value:"Supported Core Protocol Features Matrix",id:"supported-core-protocol-features-matrix",level:2}],s={toc:k};function d(t){var e=t.components,r=(0,a.Z)(t,o);return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"mandatory-core-protocol-features"},"Mandatory Core Protocol Features"),(0,l.kt)("p",null,"Drivers are assumed to implement all core features defined in the ",(0,l.kt)("a",{parentName:"p",href:"/about/protocol"},"Protocol")," document.\nThe core scope includes the following (and is not limited to) :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Metadata and Payload frames"),(0,l.kt)("li",{parentName:"ul"},"All 4 interaction models : Fire-and-forget, request/response, requestStream, requestChannel"),(0,l.kt)("li",{parentName:"ul"},"Request-N frame : application level flow control"),(0,l.kt)("li",{parentName:"ul"},"Fragmentation/Reassembly : Drivers are assumed to fully encode/decode the expected user data type"),(0,l.kt)("li",{parentName:"ul"},"Keep-Alive frame : A responder receiving a keep-alive frame must reply a keep-alive frame"),(0,l.kt)("li",{parentName:"ul"},"Error Frame : in order to fully support connection lifecycle"),(0,l.kt)("li",{parentName:"ul"},"Handling the unexpected : If Resumption, Leasing or an extension is not supported, rejected error frames must be used")),(0,l.kt)("h2",{id:"supported-core-protocol-features-matrix"},"Supported Core Protocol Features Matrix"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Driver"),(0,l.kt)("th",{parentName:"tr",align:null},"Transport(s)"),(0,l.kt)("th",{parentName:"tr",align:null},"Version"),(0,l.kt)("th",{parentName:"tr",align:null},"Core Support"),(0,l.kt)("th",{parentName:"tr",align:null},"Resumption"),(0,l.kt)("th",{parentName:"tr",align:null},"Leasing"),(0,l.kt)("th",{parentName:"tr",align:null},"RPC"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-java"},"rsocket-java")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"aeron (UDP)"),(0,l.kt)("li",null,"akka"),(0,l.kt)("li",null,"reactor-netty ",(0,l.kt)("br",null),"(TCP, websocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-js"},"rsocket-js")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"nodejs net (TCP)"),(0,l.kt)("li",null,"plain (websocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-net"},"rsocket-net")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"System.Net ",(0,l.kt)("br",null),"(TCP, websocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-cpp"},"rsocket-cpp")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"Folly (TCP)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-go"},"rsocket-go")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"Go NET (TCP)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-kotlin"},"rsocket-kotlin")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"ktor multiplatform",(0,l.kt)("br",null),"(TCP, websocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-py"},"rsocket-py")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"asyncio (TCP, websocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"1.0"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-swift"},"rsocket-swift")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"SwiftNIO (TCP, WebSocket)"),(0,l.kt)("li",null,"Network.framework through NIO Transport Services"))),(0,l.kt)("td",{parentName:"tr",align:null},"0.0.1"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://github.com/rsocket/rsocket-rust"},"rsocket-rust")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,"Tokio (TCP, WebSocket)"))),(0,l.kt)("td",{parentName:"tr",align:null},"0.1"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0}}]);